devtools::document()
library(testthat)
make_filename(2018)
expect_that(make_filename(2018), equals("accident_2018.csv.bz2"))
library(farstest)
devtools::build_vignettes()
devtools::build_vignettes()
devtools::use_vignette("farstest")
install.packages("devtools")
install.packages("devtools")
devtools::use_vignette("farstest")
devtools::build_vignettes()
devtools::build_vignettes()
getwd()
readr::read_csv("accident_2013.csv.bz2")
readr::read_csv("data/accident_2013.csv.bz2")
library(farstest)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(ggplot2)
library(faraway)
data(nepali)
head(nepali, 3)
ggplot(nepali, aes(x = ht, y = wt)) + geom_point()
View(nepali)
ggplot(nepali, aes(x = ht, y = wt)) + geom_point(color = sex)
ggplot(nepali, aes(x = ht, y = wt)) + geom_point(color = aes(sex))
ggplot(nepali, aes(x = ht, y = wt)) + geom_point(aes(color = sex))
ggplot(nepali, aes(x = ht, y = wt)) + geom_point() + color(sex)
ggplot(nepali, aes(x = ht, y = wt)) + geom_point() + color(aes(sex))
ggplot(nepali, aes(x = ht, y = wt, color = sex)) + geom_point()
ggplot() + geom_point(nepali, aes(x = ht, y = wt, color = sex))
ggplot() + geom_point(data = nepali, aes(x = ht, y = wt, color = sex))
ggplot() + geom_point(nepali, aes(x = ht, y = wt, color = sex))
nepali %>% ggplot(aes(x = ht, y = wt, color = sex)) + geom_point()
devtools::document()
devtools::load_all(".")
?farstest::fars_read
devtools::load_all(".")
?farstest::fars_read
system.file("extdata", make_filename(2015), package = "fars")
make_filename(2015)
system.file("extdata", make_filename(2015), package = "fars", mustWork = T)
devtools::load_all(".")
devtools::load_all(".")
system.file("extdata", make_filename(2015), package = "fars", mustWork = T)
system.file("extdata", make_filename(2015), package = "farstest", mustWork = T)
#' It does not check whether that file is available.
#'
#' @param year a string or integer representing a 4 digit year.
#'
#' @return returns a filename concatenating "accident_" with the year and file extensions.
#'
#' @examples
#' make_filename(2019)
#' @seealso \link{fars_read}
#' @export
make_filename <- function(year) {
year <- as.integer(year)
system.file(
"extdata",
sprintf("accident_%d.csv.bz2", year),
package = "farstest",
mustWork = T
)
}
make_filename(2015)
?farstest::fars_read_years
devtools::load_all(".")
?farstest::fars_map_state
?farstest::fars_map_state
devtools::check(document = T)
devtools::check(document = T)
devtools::check(document = T)
devtools::check(document = T)
make_filename(2018)
devtools::check(document = T)
#' @importFrom dplyr select
#' @importFrom magrittr %>%
#'
#' @seealso \link{fars_read}
#'
#' @examples
#' library(magrittr)
#' c(2014,2015,2016) %>%
#'   fars_read_years()
#' @export
year = 2016
file <- make_filename(year)
file <- make_filename(year)
make_filename(year)
tryCatch({
file <- make_filename(year)
dat <- fars_read(file)
dplyr::mutate(dat, year = year) %>%
dplyr::select(MONTH, year)
}, error = function(e) {
warning("invalid year: ", year)
return(NULL)
})
devtools::check(document = T)
devtools::check(document = T)
devtools::check(document = T)
devtools::check(document = T)
